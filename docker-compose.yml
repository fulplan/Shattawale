version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ecombot_postgres
    environment:
      POSTGRES_DB: ecombot_db
      POSTGRES_USER: ecombot
      POSTGRES_PASSWORD: ecombot123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecombot -d ecombot_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: ecombot_app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://ecombot:ecombot123@postgres:5432/ecombot_db
      - PORT=5000
      - SESSION_SECRET=telegram-ecom-bot-dev-secret-key
      - ADMIN_EMAIL=admin@example.com
      - ADMIN_PASSWORD=ChangeMe!2025
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_WEBHOOK_SECRET_PATH=/webhook/telegram/dev-secret-path
      - MTN_CLIENT_ID=${MTN_CLIENT_ID:-sandbox-client-id}
      - MTN_CLIENT_SECRET=${MTN_CLIENT_SECRET:-sandbox-client-secret}
      - MTN_API_BASE_URL=https://sandbox.momodeveloper.mtn.com
      - MTN_ENV=sandbox
      - MTN_CALLBACK_SECRET=mtn-webhook-dev-secret
      - RECONCILE_CRON=*/15 * * * *
      - RECONCILE_TIMEOUT_MINUTES=10
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
    driver: local
